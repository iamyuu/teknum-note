---
import ChatBubble from "./ChatBubble.astro";

type Chat = {
	text: string;
	time: string;
};

const chats: Chat[] = [
	{ text: "Welcome to the Rust tips chat! Let's get started.", time: "2022-11-01T12:00:00.000Z" },
	{
		text: "Tip 1: Always use 'cargo check' before building and deploying your code. This will catch any errors before they become a problem.",
		time: "2022-11-01T12:05:00.000Z",
	},
	{
		text: "Tip 2: Rust has a strong type system, make use of it to catch errors early on in the development process.",
		time: "2022-11-01T12:10:00.000Z",
	},
	{
		text: "Tip 3: Make use of the 'match' keyword for pattern matching, it is a powerful feature of the language.",
		time: "2022-11-01T12:15:00.000Z",
	},
	{
		text: "Tip 4: Use 'rustfmt' to format your code consistently and automatically, it will save you a lot of time.",
		time: "2022-11-01T12:20:00.000Z",
	},
	{
		text: "Tip 5: Always use 'Option' and 'Result' types when writing functions, it makes error handling more explicit.",
		time: "2022-11-01T12:25:00.000Z",
	},
	{
		text: "Tip 6: Make use of the 'unwrap' method judiciously, it can help simplify your code but can also lead to runtime errors.",
		time: "2022-11-01T12:30:00.000Z",
	},
	{
		text: "Tip 7: Use 'cargo test' to write and run unit tests for your code, it will help catch bugs early.",
		time: "2022-11-01T12:35:00.000Z",
	},
	{
		text: "Tip 8: Familiarize yourself with the 'std::collections' library, it has many useful data structures for different use cases.",
		time: "2022-11-01T12:40:00.000Z",
	},
	{
		text: "Tip 9: Make use of Rust's ownership and borrowing model to ensure thread safety in your code.",
		time: "2022-11-01T12:45:00.000Z",
	},
	{
		text: "Tip 10: Use 'cargo doc' to generate documentation for your code, it will make it easier for others to understand and use.",
		time: "2022-11-01T12:50:00.000Z",
	},
];
---

<div class="box">
	<div class="box-chats">
		{chats.map((chat) => <ChatBubble {...chat} />)}
	</div>
</div>

<style lang="scss">
	@use "../styles/variables";

	.box {
		position: relative;
		height: 100%;
		border-radius: 2rem;
		border: 0.2rem variables.$black solid;
		background-color: variables.$white;

		&-chats {
			padding: 2rem;
			height: 100%;
			overflow-y: auto;
			display: flex;
			flex-direction: column;
			gap: 2rem;
		}
	}
</style>
